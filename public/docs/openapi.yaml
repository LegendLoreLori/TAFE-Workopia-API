openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  '/api/v1/companies/trash/{id}':
    get:
      summary: 'Restore the specified soft deleted company from trash.'
      operationId: restoreTheSpecifiedSoftDeletedCompanyFromTrash
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Company
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company.'
        example: 17
        required: true
        schema:
          type: integer
  /api/v1/companies:
    get:
      summary: 'List all companies.'
      operationId: listAllCompanies
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Company
      security: []
    post:
      summary: 'Add a company to the database.'
      operationId: addACompanyToTheDatabase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Company
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                city:
                  type: string
                  description: 'Must be between 2 and 255 characters.'
                  example: nzi
                  nullable: false
                state:
                  type: string
                  description: 'Must be between 2 and 16 characters.'
                  example: xs
                  nullable: false
                country:
                  type: string
                  description: 'Must be between 2 and 255 characters.'
                  example: pa
                  nullable: false
                name:
                  type: string
                  description: 'Must be between 2 and 255 characters.'
                  example: yv
                  nullable: false
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: false
              required:
                - city
                - state
                - country
                - name
      security: []
  '/api/v1/companies/{id}':
    get:
      summary: 'Retrieve a single company.'
      operationId: retrieveASingleCompany
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Company
      security: []
    put:
      summary: 'Update the specified company in the database.'
      operationId: updateTheSpecifiedCompanyInTheDatabase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Company
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be between 2 and 255 characters.'
                  example: mqy
                  nullable: false
                city:
                  type: string
                  description: 'Must be between 2 and 255 characters.'
                  example: tmm
                  nullable: false
                state:
                  type: string
                  description: 'Must be between 2 and 16 characters.'
                  example: vt
                  nullable: false
                country:
                  type: string
                  description: 'Must be between 2 and 255 characters.'
                  example: cdg
                  nullable: false
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: false
              required:
                - name
      security: []
    delete:
      summary: 'Soft delete the specified company from the database'
      operationId: softDeleteTheSpecifiedCompanyFromTheDatabase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Company
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company.'
        example: fugit
        required: true
        schema:
          type: string
  '/api/v1/positions/trash/{id}':
    get:
      summary: 'Restore the specified soft deleted company from trash.'
      operationId: restoreTheSpecifiedSoftDeletedCompanyFromTrash
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Position
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the position.'
        example: 7
        required: true
        schema:
          type: integer
  /api/v1/positions:
    get:
      summary: 'List all positions'
      operationId: listAllPositions
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Retrieved positions'
                  data:
                    -
                      company:
                        name: 'Casper, Monahan and Pfannerstill'
                        city: Millerberg
                        state: side
                        country: 'Saint Barthelemy'
                        logo_path: 'C:\Users\Lori\AppData\Local\Temp\fak46E1.tmp'
                        extension: tmp
                      user:
                        name: 'Rosella Kerluke'
                        family_name: Gutkowski
                        username: mraz.kendall
                        email: orempel@example.org
                        type: Client
                        company_id: 3
                        status: Active
                      start: '2024-10-24T01:08:23+00:00'
                      end: '2024-12-15T19:59:36+00:00'
                      title: 'Host and Hostess'
                      description: 'Aut quis consequatur esse omnis maiores impedit.'
                      min_salary: 62052
                      max_salary: 109093
                      currency: NGN
                      benefits: 'consequuntur omnis beatae laudantium quas'
                      requirements: 'unde enim nisi repellat iste porro voluptatum vel non molestias'
                      type: Full-Time
                    -
                      company:
                        name: 'Sanford Inc'
                        city: Tiaraborough
                        state: town
                        country: Kazakhstan
                        logo_path: 'C:\Users\Lori\AppData\Local\Temp\fak46E3.tmp'
                        extension: tmp
                      user:
                        name: 'Alden Harber'
                        family_name: Bruen
                        username: trantow.shanel
                        email: ikoch@example.net
                        type: Client
                        company_id: 5
                        status: Active
                      start: '2024-10-24T01:08:23+00:00'
                      end: '2024-12-11T04:39:14+00:00'
                      title: Archivist
                      description: 'Est exercitationem omnis debitis qui qui sint dolorem.'
                      min_salary: 79520
                      max_salary: 127993
                      currency: EGP
                      benefits: 'repellat aut quaerat fuga qui'
                      requirements: 'autem nobis et ea optio quasi illo et harum impedit'
                      type: Part-Time
                    -
                      company:
                        name: Goodwin-Bayer
                        city: Wisokyland
                        state: land
                        country: Niue
                        logo_path: 'C:\Users\Lori\AppData\Local\Temp\fak46DF.tmp'
                        extension: tmp
                      user:
                        name: 'Prof. Bertram Borer'
                        family_name: Bailey
                        username: berge.conor
                        email: emilie96@example.net
                        type: Client
                        company_id: 1
                        status: Active
                      start: '2024-10-24T01:08:23+00:00'
                      end: '2024-12-17T20:49:13+00:00'
                      title: 'Forming Machine Operator'
                      description: 'Quos rem accusantium autem voluptas a.'
                      min_salary: 76074
                      max_salary: 125334
                      currency: BBD
                      benefits: 'esse non est ratione aut'
                      requirements: 'fugit omnis inventore excepturi voluptatem ut reiciendis voluptas maiores rerum'
                      type: Part-Time
                    -
                      company:
                        name: Goodwin-Bayer
                        city: Wisokyland
                        state: land
                        country: Niue
                        logo_path: 'C:\Users\Lori\AppData\Local\Temp\fak46DF.tmp'
                        extension: tmp
                      user:
                        name: 'Prof. Bertram Borer'
                        family_name: Bailey
                        username: berge.conor
                        email: emilie96@example.net
                        type: Client
                        company_id: 1
                        status: Active
                      start: '2024-10-24T01:08:23+00:00'
                      end: '2025-01-13T18:37:54+00:00'
                      title: 'Food Scientists and Technologist'
                      description: 'Eum et fugiat eum quam.'
                      min_salary: 72211
                      max_salary: 117941
                      currency: MKD
                      benefits: 'maiores consectetur aliquid omnis ipsam'
                      requirements: 'saepe et aut voluptas deleniti libero quis et dicta laborum'
                      type: Part-Time
                    -
                      company:
                        name: VonRueden-Braun
                        city: 'East Diana'
                        state: mouth
                        country: Australia
                        logo_path: 'C:\Users\Lori\AppData\Local\Temp\fak46E0.tmp'
                        extension: tmp
                      user:
                        name: 'Aurelia Bergnaum'
                        family_name: Pollich
                        username: zieme.jaiden
                        email: dwalter@example.org
                        type: Client
                        company_id: 2
                        status: Active
                      start: '2024-10-24T01:08:23+00:00'
                      end: '2024-12-12T07:29:22+00:00'
                      title: 'Network Admin OR Computer Systems Administrator'
                      description: 'Culpa modi veritatis illo laboriosam magnam repellendus quis.'
                      min_salary: 66958
                      max_salary: 148586
                      currency: BMD
                      benefits: 'placeat voluptatem aut fugit itaque'
                      requirements: 'nihil in corporis fugit illo doloremque magni ipsa laboriosam nihil'
                      type: Casual
                    -
                      company:
                        name: Morar-Greenfelder
                        city: Hamillmouth
                        state: ville
                        country: 'Trinidad and Tobago'
                        logo_path: 'C:\Users\Lori\AppData\Local\Temp\fak46E2.tmp'
                        extension: tmp
                      user:
                        name: 'Ted Barrows Sr.'
                        family_name: Crooks
                        username: tremayne.bogan
                        email: samara.prosacco@example.org
                        type: Client
                        company_id: 4
                        status: Active
                      start: '2024-10-24T01:08:23+00:00'
                      end: '2025-01-08T15:56:16+00:00'
                      title: 'Fiber Product Cutting Machine Operator'
                      description: 'Aut in sunt consequatur quia.'
                      min_salary: 47406
                      max_salary: 92531
                      currency: MMK
                      benefits: 'magni repellendus aut totam neque'
                      requirements: 'molestiae nihil cupiditate exercitationem molestiae nobis cum blanditiis qui similique'
                      type: Part-Time
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Retrieved positions'
                  data:
                    type: array
                    example:
                      -
                        company:
                          name: 'Casper, Monahan and Pfannerstill'
                          city: Millerberg
                          state: side
                          country: 'Saint Barthelemy'
                          logo_path: 'C:\Users\Lori\AppData\Local\Temp\fak46E1.tmp'
                          extension: tmp
                        user:
                          name: 'Rosella Kerluke'
                          family_name: Gutkowski
                          username: mraz.kendall
                          email: orempel@example.org
                          type: Client
                          company_id: 3
                          status: Active
                        start: '2024-10-24T01:08:23+00:00'
                        end: '2024-12-15T19:59:36+00:00'
                        title: 'Host and Hostess'
                        description: 'Aut quis consequatur esse omnis maiores impedit.'
                        min_salary: 62052
                        max_salary: 109093
                        currency: NGN
                        benefits: 'consequuntur omnis beatae laudantium quas'
                        requirements: 'unde enim nisi repellat iste porro voluptatum vel non molestias'
                        type: Full-Time
                      -
                        company:
                          name: 'Sanford Inc'
                          city: Tiaraborough
                          state: town
                          country: Kazakhstan
                          logo_path: 'C:\Users\Lori\AppData\Local\Temp\fak46E3.tmp'
                          extension: tmp
                        user:
                          name: 'Alden Harber'
                          family_name: Bruen
                          username: trantow.shanel
                          email: ikoch@example.net
                          type: Client
                          company_id: 5
                          status: Active
                        start: '2024-10-24T01:08:23+00:00'
                        end: '2024-12-11T04:39:14+00:00'
                        title: Archivist
                        description: 'Est exercitationem omnis debitis qui qui sint dolorem.'
                        min_salary: 79520
                        max_salary: 127993
                        currency: EGP
                        benefits: 'repellat aut quaerat fuga qui'
                        requirements: 'autem nobis et ea optio quasi illo et harum impedit'
                        type: Part-Time
                      -
                        company:
                          name: Goodwin-Bayer
                          city: Wisokyland
                          state: land
                          country: Niue
                          logo_path: 'C:\Users\Lori\AppData\Local\Temp\fak46DF.tmp'
                          extension: tmp
                        user:
                          name: 'Prof. Bertram Borer'
                          family_name: Bailey
                          username: berge.conor
                          email: emilie96@example.net
                          type: Client
                          company_id: 1
                          status: Active
                        start: '2024-10-24T01:08:23+00:00'
                        end: '2024-12-17T20:49:13+00:00'
                        title: 'Forming Machine Operator'
                        description: 'Quos rem accusantium autem voluptas a.'
                        min_salary: 76074
                        max_salary: 125334
                        currency: BBD
                        benefits: 'esse non est ratione aut'
                        requirements: 'fugit omnis inventore excepturi voluptatem ut reiciendis voluptas maiores rerum'
                        type: Part-Time
                      -
                        company:
                          name: Goodwin-Bayer
                          city: Wisokyland
                          state: land
                          country: Niue
                          logo_path: 'C:\Users\Lori\AppData\Local\Temp\fak46DF.tmp'
                          extension: tmp
                        user:
                          name: 'Prof. Bertram Borer'
                          family_name: Bailey
                          username: berge.conor
                          email: emilie96@example.net
                          type: Client
                          company_id: 1
                          status: Active
                        start: '2024-10-24T01:08:23+00:00'
                        end: '2025-01-13T18:37:54+00:00'
                        title: 'Food Scientists and Technologist'
                        description: 'Eum et fugiat eum quam.'
                        min_salary: 72211
                        max_salary: 117941
                        currency: MKD
                        benefits: 'maiores consectetur aliquid omnis ipsam'
                        requirements: 'saepe et aut voluptas deleniti libero quis et dicta laborum'
                        type: Part-Time
                      -
                        company:
                          name: VonRueden-Braun
                          city: 'East Diana'
                          state: mouth
                          country: Australia
                          logo_path: 'C:\Users\Lori\AppData\Local\Temp\fak46E0.tmp'
                          extension: tmp
                        user:
                          name: 'Aurelia Bergnaum'
                          family_name: Pollich
                          username: zieme.jaiden
                          email: dwalter@example.org
                          type: Client
                          company_id: 2
                          status: Active
                        start: '2024-10-24T01:08:23+00:00'
                        end: '2024-12-12T07:29:22+00:00'
                        title: 'Network Admin OR Computer Systems Administrator'
                        description: 'Culpa modi veritatis illo laboriosam magnam repellendus quis.'
                        min_salary: 66958
                        max_salary: 148586
                        currency: BMD
                        benefits: 'placeat voluptatem aut fugit itaque'
                        requirements: 'nihil in corporis fugit illo doloremque magni ipsa laboriosam nihil'
                        type: Casual
                      -
                        company:
                          name: Morar-Greenfelder
                          city: Hamillmouth
                          state: ville
                          country: 'Trinidad and Tobago'
                          logo_path: 'C:\Users\Lori\AppData\Local\Temp\fak46E2.tmp'
                          extension: tmp
                        user:
                          name: 'Ted Barrows Sr.'
                          family_name: Crooks
                          username: tremayne.bogan
                          email: samara.prosacco@example.org
                          type: Client
                          company_id: 4
                          status: Active
                        start: '2024-10-24T01:08:23+00:00'
                        end: '2025-01-08T15:56:16+00:00'
                        title: 'Fiber Product Cutting Machine Operator'
                        description: 'Aut in sunt consequatur quia.'
                        min_salary: 47406
                        max_salary: 92531
                        currency: MMK
                        benefits: 'magni repellendus aut totam neque'
                        requirements: 'molestiae nihil cupiditate exercitationem molestiae nobis cum blanditiis qui similique'
                        type: Part-Time
                    items:
                      type: object
                      properties:
                        company:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Casper, Monahan and Pfannerstill'
                            city:
                              type: string
                              example: Millerberg
                            state:
                              type: string
                              example: side
                            country:
                              type: string
                              example: 'Saint Barthelemy'
                            logo_path:
                              type: string
                              example: 'C:\Users\Lori\AppData\Local\Temp\fak46E1.tmp'
                            extension:
                              type: string
                              example: tmp
                        user:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Rosella Kerluke'
                            family_name:
                              type: string
                              example: Gutkowski
                            username:
                              type: string
                              example: mraz.kendall
                            email:
                              type: string
                              example: orempel@example.org
                            type:
                              type: string
                              example: Client
                            company_id:
                              type: integer
                              example: 3
                            status:
                              type: string
                              example: Active
                        start:
                          type: string
                          example: '2024-10-24T01:08:23+00:00'
                        end:
                          type: string
                          example: '2024-12-15T19:59:36+00:00'
                        title:
                          type: string
                          example: 'Host and Hostess'
                        description:
                          type: string
                          example: 'Aut quis consequatur esse omnis maiores impedit.'
                        min_salary:
                          type: integer
                          example: 62052
                        max_salary:
                          type: integer
                          example: 109093
                        currency:
                          type: string
                          example: NGN
                        benefits:
                          type: string
                          example: 'consequuntur omnis beatae laudantium quas'
                        requirements:
                          type: string
                          example: 'unde enim nisi repellat iste porro voluptatum vel non molestias'
                        type:
                          type: string
                          example: Full-Time
      tags:
        - Position
      security: []
    post:
      summary: 'Add a position for a company to the database'
      operationId: addAPositionForACompanyToTheDatabase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Position
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the companies table.'
                  example: 1
                  nullable: false
                user_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 9
                  nullable: false
                start:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-10-24T06:10:32'
                  nullable: false
                end:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>start</code>.'
                  example: '2075-01-06'
                  nullable: false
                title:
                  type: string
                  description: 'Must be between 2 and 255 characters.'
                  example: byg
                  nullable: false
                description:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: 'Consequatur accusantium explicabo aliquid delectus perspiciatis labore ipsum.'
                  nullable: false
                min_salary:
                  type: integer
                  description: ''
                  example: 4
                  nullable: false
                max_salary:
                  type: integer
                  description: ''
                  example: 7
                  nullable: false
                currency:
                  type: string
                  description: ''
                  example: omnis
                  nullable: false
                benefits:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: hdovvigsuyorv
                  nullable: false
                requirements:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: zxnoeqjqcywiqftpeudhjupacdxrcbjzqqjczhzobpkju
                  nullable: false
                type:
                  type: string
                  description: ''
                  example: voluptatibus
                  nullable: false
              required:
                - company_id
                - user_id
                - start
                - end
                - title
                - description
                - min_salary
                - max_salary
                - currency
                - benefits
                - requirements
                - type
      security: []
  '/api/v1/positions/{id}':
    get:
      summary: 'Retrieve a single position and its related company.'
      operationId: retrieveASinglePositionAndItsRelatedCompany
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Position
      security: []
    put:
      summary: 'Update the specified position in the database'
      operationId: updateTheSpecifiedPositionInTheDatabase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Position
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company_id:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                user_id:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                start:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                end:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>now</code>.'
                  example: '2081-08-20'
                  nullable: false
                title:
                  type: string
                  description: 'Must be between 2 and 255 characters.'
                  example: um
                  nullable: false
                description:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: 'Magnam molestiae tempore beatae error adipisci.'
                  nullable: false
                min_salary:
                  type: integer
                  description: ''
                  example: 5
                  nullable: false
                max_salary:
                  type: integer
                  description: ''
                  example: 8
                  nullable: false
                currency:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: false
                benefits:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: kvfbvaujplpaoawqovgywnuvvgsmusunugruwqynfpsfzgnplzginehllwmhrhjwedsjnmoffzohycj
                  nullable: false
                requirements:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: bsaexbmlssgvbcbsyknuochvqxubgowkt
                  nullable: false
                type:
                  type: string
                  description: ''
                  example: temporibus
                  nullable: false
              required:
                - title
      security: []
    delete:
      summary: 'Soft delete the specified position from the database'
      operationId: softDeleteTheSpecifiedPositionFromTheDatabase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Position
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the position.'
        example: 1
        required: true
        schema:
          type: integer
  /api/register:
    post:
      summary: 'Register a new user of type client or applicant'
      operationId: registerANewUserOfTypeClientOrApplicant
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Sanctum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be between 2 and 255 characters.'
                  example: tpa
                  nullable: false
                family_name:
                  type: string
                  description: 'Must be between 2 and 255 characters.'
                  example: bxv
                  nullable: false
                username:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: ctyvmsncnwmdpzsilpyhtuxihtgpsexbnvjmfiedsqyket
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: kamren40@example.org
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: sunt
                  nullable: false
                password_confirmation:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: false
                type:
                  type: string
                  description: ''
                  example: in
                  nullable: false
                company_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the companies table.'
                  example: 5
                  nullable: false
              required:
                - name
                - family_name
                - username
                - email
                - password
                - password_confirmation
                - type
      security: []
  /api/login:
    post:
      summary: 'Create a session token for an existing user'
      operationId: createASessionTokenForAnExistingUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Sanctum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ray.runolfsdottir@example.com
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: iste
                  nullable: false
                device_name:
                  type: string
                  description: ''
                  example: omnis
                  nullable: false
              required:
                - email
                - password
                - device_name
      security: []
  /api/logout:
    post:
      summary: 'Delete the session token for the currently authenticated user'
      operationId: deleteTheSessionTokenForTheCurrentlyAuthenticatedUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Sanctum
      security: []
  '/api/v1/users/trash/{id}':
    get:
      summary: 'Restore the specified soft deleted user from trash'
      operationId: restoreTheSpecifiedSoftDeletedUserFromTrash
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company.'
        example: 11
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: 'List all users'
      operationId: listAllUsers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - User
      security: []
    post:
      summary: 'Add a user to the database'
      operationId: addAUserToTheDatabase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be between 2 and 255 characters.'
                  example: th
                  nullable: false
                family_name:
                  type: string
                  description: 'Must be between 2 and 255 characters.'
                  example: pv
                  nullable: false
                username:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: gefihoemnua
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: wyatt26@example.net
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: rerum
                  nullable: false
                password_confirmation:
                  type: string
                  description: ''
                  example: velit
                  nullable: false
                type:
                  type: string
                  description: ''
                  example: fugiat
                  nullable: false
                company_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the companies table.'
                  example: 14
                  nullable: false
              required:
                - name
                - family_name
                - username
                - email
                - password
                - password_confirmation
                - type
      security: []
  '/api/v1/users/{id}':
    get:
      summary: 'Retrieve a single user'
      operationId: retrieveASingleUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - User
      security: []
    put:
      summary: 'Update the specified user in the database'
      operationId: updateTheSpecifiedUserInTheDatabase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be between 2 and 255 characters.'
                  example: jb
                  nullable: false
                family_name:
                  type: string
                  description: 'Must be between 2 and 255 characters.'
                  example: al
                  nullable: false
                username:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gusikowski.kurt@example.org
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: soluta
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'This field is required when <code>password</code> is present.'
                  example: null
                  nullable: false
                type:
                  type: string
                  description: ''
                  example: deserunt
                  nullable: false
                company_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the companies table.'
                  example: 2
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: false
              required:
                - email
                - password
                - status
      security: []
    delete:
      summary: 'Soft delete the specified user from the database'
      operationId: softDeleteTheSpecifiedUserFromTheDatabase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Company
    description: "\nAPI endpoints for companies"
  -
    name: Position
    description: "\nAPI endpoints for job positions"
  -
    name: Sanctum
    description: "\nAPI endpoints for user facing interactions"
  -
    name: User
    description: "\nAPI endpoints for users"
