name: Position
description: |-

  API endpoints for job positions
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/positions/trash/{id}'
    metadata:
      groupName: Position
      groupDescription: |-

        API endpoints for job positions
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore the specified soft deleted company from trash.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the position.'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/positions
    metadata:
      groupName: Position
      groupDescription: |-

        API endpoints for job positions
      subgroup: ''
      subgroupDescription: ''
      title: 'List all positions'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Retrieved positions","data":[{"company":{"name":"Predovic Group","city":"Ernserchester","state":"mouth","country":"Austria","logo_path":"C:\\Users\\Lori\\AppData\\Local\\Temp\\fak4332.tmp","extension":"tmp"},"user":{"name":"Bernadette Powlowski PhD","family_name":"O''Kon","username":"paucek.melody","email":"svandervort@example.net","type":"Client","company_id":2,"status":"Active"},"start":"2024-11-15T08:18:45+00:00","end":"2025-02-04T20:04:56+00:00","title":"Diagnostic Medical Sonographer","description":"Sit veritatis vitae voluptatem tempore eligendi minima atque.","min_salary":53555,"max_salary":99268,"currency":"BIF","benefits":"sint perferendis temporibus dolor molestiae","requirements":"sit non et corrupti sunt dolorum excepturi dolor ducimus porro","type":"Part-Time"},{"company":{"name":"Predovic Group","city":"Ernserchester","state":"mouth","country":"Austria","logo_path":"C:\\Users\\Lori\\AppData\\Local\\Temp\\fak4332.tmp","extension":"tmp"},"user":{"name":"Bernadette Powlowski PhD","family_name":"O''Kon","username":"paucek.melody","email":"svandervort@example.net","type":"Client","company_id":2,"status":"Active"},"start":"2024-11-15T08:18:45+00:00","end":"2025-01-24T00:57:49+00:00","title":"Electrical and Electronics Drafter","description":"Qui voluptatum dolores ut consectetur sed vel dolorem aperiam.","min_salary":61547,"max_salary":104382,"currency":"VND","benefits":"a est ut est similique","requirements":"harum eveniet aspernatur vel laudantium et culpa est eos atque","type":"Part-Time"},{"company":{"name":"Heaney, Bashirian and Turcotte","city":"Hyatttown","state":"shire","country":"South Georgia and the South Sandwich Islands","logo_path":"C:\\Users\\Lori\\AppData\\Local\\Temp\\fak4335.tmp","extension":"tmp"},"user":{"name":"Miss Abigail Hackett II","family_name":"Streich","username":"ekrajcik","email":"uwisoky@example.org","type":"Client","company_id":5,"status":"Active"},"start":"2024-11-15T08:18:45+00:00","end":"2025-01-16T08:44:10+00:00","title":"Marine Cargo Inspector","description":"Officia qui dolorem velit facilis porro voluptatem.","min_salary":58399,"max_salary":100898,"currency":"INR","benefits":"debitis aspernatur similique amet laboriosam","requirements":"at nemo molestias minima quia sapiente quam aut sit quam","type":"Casual"},{"company":{"name":"Hayes-O''Reilly","city":"Johnsview","state":"burgh","country":"Iceland","logo_path":"C:\\Users\\Lori\\AppData\\Local\\Temp\\fak4331.tmp","extension":"tmp"},"user":{"name":"Wendell Hansen","family_name":"Altenwerth","username":"cydney.metz","email":"ursula.rath@example.com","type":"Client","company_id":1,"status":"Active"},"start":"2024-11-15T08:18:45+00:00","end":"2025-01-10T23:04:59+00:00","title":"Boiler Operator","description":"Ex quia molestiae et molestiae omnis sit ipsam.","min_salary":76111,"max_salary":108151,"currency":"NGN","benefits":"facilis qui optio ut consequuntur","requirements":"ducimus magni et ipsum illum nostrum cum iure ex placeat","type":"Contract"},{"company":{"name":"Hayes-O''Reilly","city":"Johnsview","state":"burgh","country":"Iceland","logo_path":"C:\\Users\\Lori\\AppData\\Local\\Temp\\fak4331.tmp","extension":"tmp"},"user":{"name":"Dr. Sandy Lind","family_name":"Kshlerin","username":"ezra.fahey","email":"ondricka.stephany@example.net","type":"Client","company_id":1,"status":"Active"},"start":"2024-11-15T08:18:45+00:00","end":"2024-12-20T02:03:40+00:00","title":"Recreational Vehicle Service Technician","description":"Rerum at ut neque nulla.","min_salary":54715,"max_salary":130101,"currency":"ETB","benefits":"animi est aspernatur modi voluptas","requirements":"similique aliquid repudiandae ut ratione cupiditate doloribus adipisci temporibus laudantium","type":"Casual"},{"company":{"name":"Heaney, Bashirian and Turcotte","city":"Hyatttown","state":"shire","country":"South Georgia and the South Sandwich Islands","logo_path":"C:\\Users\\Lori\\AppData\\Local\\Temp\\fak4335.tmp","extension":"tmp"},"user":{"name":"Mr. Clifford Muller","family_name":"Kilback","username":"destiny.schultz","email":"parisian.lauren@example.net","type":"Client","company_id":5,"status":"Active"},"start":"2024-11-15T08:18:45+00:00","end":"2024-12-29T11:10:41+00:00","title":"Embalmer","description":"Voluptas molestiae et quia velit et qui rerum.","min_salary":78926,"max_salary":140340,"currency":"BBD","benefits":"officiis et quae maiores sint","requirements":"aspernatur quia id excepturi sed enim esse rerum nostrum repudiandae","type":"Full-Time"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/positions
    metadata:
      groupName: Position
      groupDescription: |-

        API endpoints for job positions
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a position for a company to the database'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      company_id:
        name: company_id
        description: 'The <code>id</code> of an existing record in the companies table.'
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start:
        name: start
        description: 'Must be a valid date.'
        required: true
        example: '2024-12-01T07:41:39'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end:
        name: end
        description: 'Must be a valid date. Must be a date after <code>start</code>.'
        required: true
        example: '2102-11-13'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      title:
        name: title
        description: 'Must be between 2 and 255 characters.'
        required: true
        example: pp
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must be at least 2 characters.'
        required: true
        example: 'Rem dolor quae et aut.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_salary:
        name: min_salary
        description: ''
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_salary:
        name: max_salary
        description: ''
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: ''
        required: true
        example: rem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      benefits:
        name: benefits
        description: 'Must be at least 2 characters.'
        required: true
        example: iyjlmsggujujvksqopalrnfkknyghplcikyjfpthopnyqvrpwecrwggeazq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      requirements:
        name: requirements
        description: 'Must be at least 2 characters.'
        required: true
        example: vhsckwjfqqectmwdmuurqsagpoznqbqrjyxtoedinmmazfgnmvrfsktzyncidywh
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      company_id: 13
      user_id: 8
      start: '2024-12-01T07:41:39'
      end: '2102-11-13'
      title: pp
      description: 'Rem dolor quae et aut.'
      min_salary: 18
      max_salary: 6
      currency: rem
      benefits: iyjlmsggujujvksqopalrnfkknyghplcikyjfpthopnyqvrpwecrwggeazq
      requirements: vhsckwjfqqectmwdmuurqsagpoznqbqrjyxtoedinmmazfgnmvrfsktzyncidywh
      type: aut
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/positions/{id}'
    metadata:
      groupName: Position
      groupDescription: |-

        API endpoints for job positions
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a single position and its related company.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the position.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/positions/{id}'
    metadata:
      groupName: Position
      groupDescription: |-

        API endpoints for job positions
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified position in the database'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the position.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      company_id:
        name: company_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start:
        name: start
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end:
        name: end
        description: 'Must be a valid date. Must be a date after <code>now</code>.'
        required: false
        example: '2109-07-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      title:
        name: title
        description: 'Must be between 2 and 255 characters.'
        required: true
        example: sq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must be at least 2 characters.'
        required: false
        example: 'Ipsa laborum laboriosam nobis et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_salary:
        name: min_salary
        description: ''
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_salary:
        name: max_salary
        description: ''
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: ''
        required: false
        example: minima
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      benefits:
        name: benefits
        description: 'Must be at least 2 characters.'
        required: false
        example: ltenffavmqtuzqpzohdmgggwhtoxoniusdjmsnqsggbrnsavdvzawvyvlor
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      requirements:
        name: requirements
        description: 'Must be at least 2 characters.'
        required: false
        example: lxwybddmubuvbcynvuqgejxvdofytkealsauyauoslnovuiooovtilevmyygywlvpzsilltjosigk
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: false
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      end: '2109-07-01'
      title: sq
      description: 'Ipsa laborum laboriosam nobis et.'
      min_salary: 17
      max_salary: 3
      currency: minima
      benefits: ltenffavmqtuzqpzohdmgggwhtoxoniusdjmsnqsggbrnsavdvzawvyvlor
      requirements: lxwybddmubuvbcynvuqgejxvdofytkealsauyauoslnovuiooovtilevmyygywlvpzsilltjosigk
      type: et
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/positions/{id}'
    metadata:
      groupName: Position
      groupDescription: |-

        API endpoints for job positions
      subgroup: ''
      subgroupDescription: ''
      title: 'Soft delete the specified position from the database'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the position.'
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 13
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
