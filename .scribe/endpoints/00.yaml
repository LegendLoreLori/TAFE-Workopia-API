name: Company
description: |-

  API endpoints for companies
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/companies
    metadata:
      groupName: Company
      groupDescription: |-

        API endpoints for companies
      subgroup: ''
      subgroupDescription: ''
      title: 'List all companies.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Retrieved companies","data":[{"name":"O''Hara-Beatty","city":"Collierville","state":"side","country":"Ghana","logo_path":"C:\\Users\\Lori\\AppData\\Local\\Temp\\fak5E11.tmp","extension":"tmp"},{"name":"Tromp-Ritchie","city":"Port Ayana","state":"furt","country":"Uzbekistan","logo_path":"C:\\Users\\Lori\\AppData\\Local\\Temp\\fak5E12.tmp","extension":"tmp"},{"name":"Streich PLC","city":"Port Nyasiaburgh","state":"stad","country":"Guyana","logo_path":"C:\\Users\\Lori\\AppData\\Local\\Temp\\fak5E13.tmp","extension":"tmp"},{"name":"Roob LLC","city":"Leslieland","state":"mouth","country":"New Zealand","logo_path":"C:\\Users\\Lori\\AppData\\Local\\Temp\\fak5E43.tmp","extension":"tmp"},{"name":"Woolies","city":"Yorke","state":"Liquid","country":"Atlantis","logo_path":null,"extension":null}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/companies
    metadata:
      groupName: Company
      groupDescription: |-

        API endpoints for companies
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a company to the database.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      city:
        name: city
        description: 'Must be between 2 and 255 characters.'
        required: true
        example: cqn
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      state:
        name: state
        description: 'Must be between 2 and 16 characters.'
        required: true
        example: fx
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      country:
        name: country
        description: 'Must be between 2 and 255 characters.'
        required: true
        example: nsf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must be between 2 and 255 characters.'
        required: true
        example: ba
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      logo:
        name: logo
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      city: cqn
      state: fx
      country: nsf
      name: ba
    fileParameters:
      logo: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/companies/{id}'
    metadata:
      groupName: Company
      groupDescription: |-

        API endpoints for companies
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a single company.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the company.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Retrieved company with id: 1","data":{"name":"O''Hara-Beatty","city":"Collierville","state":"side","country":"Ghana","logo_path":"C:\\Users\\Lori\\AppData\\Local\\Temp\\fak5E11.tmp","extension":"tmp"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/companies/{id}'
    metadata:
      groupName: Company
      groupDescription: |-

        API endpoints for companies
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified company in the database.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the company.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be between 2 and 255 characters.'
        required: true
        example: mn
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'Must be between 2 and 255 characters.'
        required: false
        example: mw
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      state:
        name: state
        description: 'Must be between 2 and 16 characters.'
        required: false
        example: mj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      country:
        name: country
        description: 'Must be between 2 and 255 characters.'
        required: false
        example: dm
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      logo:
        name: logo
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: mn
      city: mw
      state: mj
      country: dm
    fileParameters:
      logo: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/companies/{id}'
    metadata:
      groupName: Company
      groupDescription: |-

        API endpoints for companies
      subgroup: ''
      subgroupDescription: ''
      title: 'Soft delete the specified company from the database'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the company.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/companies/trash/{id}'
    metadata:
      groupName: Company
      groupDescription: |-

        API endpoints for companies
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore the specified soft deleted company from trash.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the trash.'
        required: true
        example: ipsa
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: ipsa
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Company with id: ipsa restored","data":"ipsa"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
