## Autogenerated by Scribe. DO NOT MODIFY.

name: Company
description: |-

  API endpoints for companies
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/companies/trash/{id}'
    metadata:
      groupName: Company
      groupDescription: |-

        API endpoints for companies
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore the specified soft deleted company from trash.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the company.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/companies
    metadata:
      groupName: Company
      groupDescription: |-

        API endpoints for companies
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a list of companies'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/companies
    metadata:
      groupName: Company
      groupDescription: |-

        API endpoints for companies
      subgroup: ''
      subgroupDescription: ''
      title: 'Handles the creation of a new company in the database.'
      description: |-
        Requires the user to have appropriate permissions as an administrator or a client.

        This endpoint validates the input data for the company being added, checks for uniqueness
        of the company name within the specified city, state, and country, and optionally stores
        a logo file. Upon successful validation, it creates the company record and returns a JSON response
        with the created company's details.

        - Ensure you are authenticated and have the required scopes (`companies:administer` or `companies:add`).
        - Make a POST request to this endpoint with the necessary fields in the request body.
        - If a logo file is included, ensure it is in `jpg`, `jpeg`, or `png` format.

        - **Success (201)**: Returns the newly created company details in JSON format.
        - **Failure (401)**: Unauthorized access if the user lacks the required permissions.
        - **Failure (422)**: Validation errors if the input data is invalid.
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      city:
        name: city
        description: 'Must be between 2 and 255 characters.'
        required: true
        example: ws
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      state:
        name: state
        description: 'Must be between 2 and 16 characters.'
        required: true
        example: mmw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      country:
        name: country
        description: 'Must be between 2 and 255 characters.'
        required: true
        example: xwd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'Must be between 2 and 255 characters.'
        required: true
        example: qpe
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      logo:
        name: logo
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      city: ws
      state: mmw
      country: xwd
      name: qpe
    fileParameters:
      logo: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/companies/{id}'
    metadata:
      groupName: Company
      groupDescription: |-

        API endpoints for companies
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a single company.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the company.'
        required: true
        example: rem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: rem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/companies/{id}'
    metadata:
      groupName: Company
      groupDescription: |-

        API endpoints for companies
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified company in the database.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the company.'
        required: true
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: molestias
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be between 2 and 255 characters.'
        required: true
        example: vni
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      city:
        name: city
        description: 'Must be between 2 and 255 characters.'
        required: false
        example: qwq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      state:
        name: state
        description: 'Must be between 2 and 16 characters.'
        required: false
        example: iq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      country:
        name: country
        description: 'Must be between 2 and 255 characters.'
        required: false
        example: nlb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      logo:
        name: logo
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: vni
      city: qwq
      state: iq
      country: nlb
    fileParameters:
      logo: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/companies/{id}'
    metadata:
      groupName: Company
      groupDescription: |-

        API endpoints for companies
      subgroup: ''
      subgroupDescription: ''
      title: 'Soft delete the specified company from the database'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the company.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
